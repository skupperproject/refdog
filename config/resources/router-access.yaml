name: RouterAccess
related_resources: [site, link]
links: [skupper/site-linking]
description: |-
  Configuration for secure access to the site router.  The
  configuration includes TLS credentials and router ports.  The
  RouterAccess resource is used to implement link access for sites.
metadata:
  include_properties: [metadata/*]
spec:
  include_properties: [settings]
  properties:
    - name: roles
      description: |-
        The named interfaces by which a router can be accessed.  These
        include "inter-router" for links between interior routers and
        "edge" for links from edge routers to interior routers.
    - name: tlsCredentials
      links: [skupper/router-tls, kubernetes/tls-secrets, 
            skupper/system-tls-credentials]
      description: |-
        The name of a bundle of TLS certificates used for mutual TLS
        router-to-router communication.  The bundle contains the
        server certificate and key and the trusted client certificate
        (usually a CA).

        On Kubernetes, the value is the name of a Secret in the
        current namespace.

        On Docker, Podman, and Linux, the value is the name of a
        directory under `input/certs/` in the current namespace.
    - name: generateTlsCredentials
      description: |-
        When set, Skupper generates the TLS credentials to be
        stored in the Secret specified by `tlsCredentials`. See
        also `issuer`.
    - name: issuer
      description: |-
        The name of the Kubernetes Secret containing the signing CA
        used to generate TLS certificates for the RouterAccess when
        `generateTlsCredentials` is set.
    - name: accessType
      platforms: [Kubernetes]
      default: |
        _On OpenShift, the default is `route`.  For other
        Kubernetes flavors, the default is `loadbalancer`._
      choices:
        - name: route
          description: Use an OpenShift route.  _OpenShift only._
        - name: loadbalancer
          description: Use a Kubernetes load balancer.
      description: |-
        Configures the access type for the router endpoints.
        Available access types and the default selection is
        configured on the Skupper controller for Kubernetes.

        The options available by default are:
          - `local`: No external ingress. Implies a Kubernetes Service with type CluterIP.
          - `route`: Exposed via an OpenShift Route.
          - `loadbalancer`: Exposed via a Kubernetes Service with type LoadBalancer.
    - name: bindHost
      default: 0.0.0.0
      platforms: [Docker, Podman, Linux]
      description: |-
        The hostname or IP address of the network interface to bind
        to.  By default, Skupper binds all the interfaces on the host.
    - name: subjectAlternativeNames
      platforms: [Docker, Podman, Linux]
      default: |
        _The current hostname and the IP address of each bound network
        interface_
      description: |-
        The hostnames and IPs secured by the router TLS certificate.
  description: |-
    Configuration for secure access to the site router.  The
    configuration includes TLS credentials and router ports.  The
    RouterAccess resource is used to implement link access for sites.
status:
  include_properties: [status/*]
  properties:
    - name: status
      description: |-
        The current state of the resource.
         - `Pending`: The resource is being processed.
         - `Error`: There was an error processing the resource. See `message` for more information.
         - `Ready`: The resource is ready to use.
    - name: message
      description: |-
        A human-readable status message. Error messages are reported here.
    - name: conditions
      description: |-
        A set of named conditions describing the current state of the resource.

         - `Configured`: The output resources for this resource have been created.
         - `Resolved`: The connection endpoints are available.
         - `Ready`: The router access is ready for use. All other conditions are true.
    - name: endpoints
      group: advanced
      description: |-
        An array of connection endpoints.  Each item has a name, host,
        port, and group.
